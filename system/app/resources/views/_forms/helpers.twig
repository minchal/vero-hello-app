
{#===========================
    Helpers: 
=============================#}
{%- macro js_validate(form) -%}
    <script>
        require(['jquery','helper/validate','domReady!'], function($, validate) {
            validate($('#{{ form.name() }}'));
        });
    </script>
{%- endmacro -%}

{%- macro header(form, class = 'form-horizontal') -%}
    {%- from '_forms/html.twig' import header -%}
    {{- header(form) }} {% if class %}class="{{ class }}"{% endif %}
{%- endmacro -%}

{% macro tokens(form) %}
    {% from '_forms/controls.twig' import hidden %}
    
    {{ hidden('csrf', form.csrf(), {}, form.name()~'_') }}
    {{ hidden(form.name(), form.token() ? form.token() : '1', {}, form.name()~'_') }}
{% endmacro %}

{% macro submit(label, attr = {}, icon = null) %}
    {% from '_forms/controls.twig' import button %}
    
    <div class="btns-right">
        {{ button(label, attr, icon) }}
    </div>
{% endmacro %}

{% macro button(label, attr = {}, icon = null) %}
    {% from '_forms/controls.twig' import button %}
    {{ button(label, attr, icon) }}
{% endmacro %}

{#===========================
    Controls: 
=============================#}

{% macro text(field, label, attr = {}, addons = {}) %}
    {{ _self.input('text', field, label, attr, addons) }}
{% endmacro %}

{% macro number(field, label, attr = {}, addons = {}) %}
    {{ _self.input('number', field, label, attr, addons) }}
{% endmacro %}

{% macro email(field, label, attr = {}, addons = {}) %}
    {{ _self.input('email', field, label, attr, addons) }}
{% endmacro %}

{% macro url(field, label, attr = {}, addons = {}) %}
    {{ _self.input('url', field, label, attr, addons) }}
{% endmacro %}

{% macro date(field, label, attr = {}, addons = {}) %}
    {% set field = field|merge({value: format.date(field.value, 'iso')}) %}
    {{ _self.input('text', field, label, {'data-format':'YYYY-MM-DD', 'data-pickTime': 'false'}|merge(attr), addons) }}
{% endmacro %}

{% macro datetime(field, label, attr = {}, addons = {}) %}
    {% set field = field|merge({value: format.date(field.value,'iso-datetime')}) %}
    {{ _self.input('text', field, label, {'data-format':'YYYY-MM-DD hh:mm:ss'}|merge(attr), addons) }}
{% endmacro %}

{% macro input(type, field, label, attr = {}, addons = {}) %}
    {% from '_forms/controls.twig' import input %}
    
    {% set options = resolveSetItems(field.validate) %}
    {% set value = field.value and options.getKey is defined ? options.getKey(field.value) : field.value %}
    
    {{ input(
        type, field.name, label is null ? field.name|i18n~':' : label,
        value, field.error, validate(field.validate, attr), field.form~'_', addons
    ) }}
{% endmacro %}

{% macro password(field, label, attr = {}, addons = {}) %}
    {% from '_forms/controls.twig' import input %}
    
    {{ input(
        'password', field.name, label is null ? field.name|i18n~':' : label, 
        '', field.error, validate(field.validate, attr), field.form~'_', addons
    ) }}
{% endmacro %}

{% macro textarea(field, label, attr = {}, addons = {}) %}
    {% from '_forms/controls.twig' import textarea %}
    
    {{ textarea(
        field.name, label is null ? field.name|i18n~':' : label,
        field.value, field.error, validate(field.validate, attr), field.form~'_', addons
    ) }}
{% endmacro %}

{% macro select(field, label, options = {}, attr = {}, addons = {}) %}
    {% from '_forms/controls.twig' import select %}
    
    {{ select(
        options ?: resolveSetItems(field.validate),
        field.name, label is null ? field.name|i18n~':' : label,
        field.value, field.error, validate(field.validate, attr), field.form~'_', addons
    ) }}
{% endmacro %}

{% macro checkbox(field, label, attr = {}, addons = {}) %}
    {% from '_forms/controls.twig' import checkbox %}
    
    {{ checkbox(
        field.name, label is null ? field.name|i18n : label,
        field.value, field.error, validate(field.validate, attr), field.form~'_', addons
    ) }}
{% endmacro %}
    
{% macro checkbox_single(field, label, attr = {}, addons = {}) %}
    {% from '_forms/controls.twig' import checkbox_single %}
    
    {{ checkbox_single(
        field.name, label is null ? field.name|i18n : label,
        field.value, field.error, validate(field.validate, attr), field.form~'_', addons
    ) }}
{% endmacro %}

{% macro checkboxes(field, label, options, attr = {}, addons = {}) %}
    {% from '_forms/controls.twig' import checkboxes %}
    
    {{ checkboxes(
        options ?: resolveSetItems(field.validate),
        field.name, label is null ? field.name|i18n~':' : label, field.value,
        field.error, validate(field.validate, attr), field.form~'_', addons
    ) }}
{% endmacro %}

{% macro radio(field, label, options, attr = {}, addons = {}) %}
    {% from '_forms/controls.twig' import radio %}
    
    {{ radio(
        options ?: resolveSetItems(field.validate),
        field.name, label is null ? field.name|i18n~':' : label, field.value,
        field.error, validate(field.validate, attr), field.form~'_', addons
    ) }}
{% endmacro %}

{% macro hidden(field, attr = {}) %}
    {% from '_forms/controls.twig' import hidden %}
    
    {% set options = resolveSetItems(field.validate) %}
    {% set value = field.value and options.getKey is defined ? options.getKey(field.value) : field.value %}
    
    {{ hidden(field.name, value, attr, field.form~'_') }}
{% endmacro %}

{% macro select2(field, label, attr = {}, multiple = false, addons = {}) %}
    {% set options = resolveSetItems(field.validate) %}
    
    {% if multiple %}
        {% set value = options.getKeys(field.value)|join(',') %}
        {% set text = '{' %}
        
        {% for v in field.value %}
            {% set text = text ~ '"' ~ options.getKey(v) ~ '" : "' ~ options.getDesc(v) ~ '"' ~ (loop.last ? "" : ",") %}
        {% endfor %}
        
        {% set text = text ~ '}' %}
    {% else %}
        {% set value = options.getKey(field.value) %}
        {% set text = options.getDesc(field.value) %}
    {% endif %}
    
    {% from '_forms/controls.twig' import input %}
    
    {{ input(
        'hidden', field.name, label is null ? field.name|i18n~':' : label,
        value, field.error, validate(field.validate, attr|merge({'data-text': text})), field.form~'_', addons
    ) }}
{% endmacro %}

{% macro tags(field, label, attr = {}, addons = {}) %}
    {% set value = field.value|join(',') %}

    {% from '_forms/controls.twig' import input %}
    
    {{ input(
        'hidden', field.name, label is null ? field.name|i18n~':' : label,
        value, field.error, validate(field.validate, attr), field.form~'_', addons
    ) }}
{% endmacro %}